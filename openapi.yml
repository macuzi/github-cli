components:
  schemas:
    APITokenResult:
      properties:
        api_token:
          description: API token with the prefix `api_`. This token inherits all permissions
            of users and acts on behalf of users.
          title: API Token
          type: string
      required:
      - api_token
      title: APITokenResult
      type: object
    Body_import_evaluation_set_api_v1_workspaces__workspace_name__evaluation_sets_import_post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      title: Body_import_evaluation_set_api_v1_workspaces__workspace_name__evaluation_sets_import_post
      type: object
    Body_upload_file_api_v1_workspaces__workspace_name__files_post:
      properties:
        file:
          format: binary
          title: File
          type: string
        meta:
          default: 'null'
          title: Meta
          type: string
        params:
          default: '{}'
          title: Params
          type: string
        text:
          title: Text
          type: string
      title: Body_upload_file_api_v1_workspaces__workspace_name__files_post
      type: object
    Body_upload_file_preview_api_v1_workspaces__workspace_name__pipelines__pipeline_name__file_preview_post:
      properties:
        file:
          format: binary
          title: File
          type: string
        params:
          default: '{}'
          title: Params
          type: string
        text:
          title: Text
          type: string
      title: Body_upload_file_preview_api_v1_workspaces__workspace_name__pipelines__pipeline_name__file_preview_post
      type: object
    CountDocumentsParams:
      properties:
        filters:
          additionalProperties:
            items:
              type: string
            type: array
          title: Filters
          type: object
        only_documents_without_embedding:
          default: false
          title: Only Documents Without Embedding
          type: boolean
      title: CountDocumentsParams
      type: object
    CreateModelRegistryToken:
      properties:
        token:
          description: Token of the providing host
          title: Token
          type: string
      required:
      - token
      title: 'Create Registry token '
      type: object
    CreateToken:
      properties:
        expires_at:
          description: Timestamp when the token should expire e.g. today in seconds
            + 1 year in seconds
          format: date-time
          title: API token expiry
          type: string
      title: CreateToken
      type: object
    DCDocumentCount:
      properties:
        count:
          title: Count
          type: integer
      required:
      - count
      title: DCDocumentCount
      type: object
    DCDocumment:
      properties:
        content:
          title: Content
          type: string
        content_type:
          enum:
          - text
          - table
          - image
          title: Content Type
          type: string
        embedding:
          items:
            type: number
          title: Embedding
          type: array
        id:
          title: Id
          type: string
        id_hash_keys:
          items:
            type: string
          title: Id Hash Keys
          type: array
        meta:
          title: Meta
          type: object
        score:
          title: Score
          type: number
      required:
      - id
      - content
      - content_type
      - meta
      title: DCDocumment
      type: object
    DocumentStore:
      properties:
        indexing:
          $ref: '#/components/schemas/PipelineIndexingStatus'
        return_embedding:
          title: Return Embedding
          type: boolean
        similarity:
          title: Similarity
          type: string
      required:
      - similarity
      - return_embedding
      - indexing
      title: DocumentStore
      type: object
    EntityRole:
      properties:
        name:
          title: Name
          type: string
        role:
          title: Role
          type: string
      required:
      - name
      - role
      title: EntityRole
      type: object
    EvaluationSetImport:
      properties:
        evaluation_set_id:
          description: Unique identifier of an evaluation set.
          format: uuid
          title: Evaluation set id
          type: string
      required:
      - evaluation_set_id
      title: EvaluationSetImport
      type: object
    EvaluationSetList:
      items:
        $ref: '#/components/schemas/EvaluationSetWithStatus'
      title: Evaluation Set List
      type: array
    EvaluationSetPagination:
      properties:
        data:
          $ref: '#/components/schemas/EvaluationSetList'
        has_more:
          title: Has More
          type: boolean
        total:
          title: Total
          type: integer
      required:
      - data
      - has_more
      - total
      title: EvaluationSetPagination
      type: object
    EvaluationSetWithStatus:
      properties:
        created_at:
          description: Datetime object, when the pipeline was created
          format: date-time
          title: Pipeline creation
          type: string
        evaluation_set_id:
          description: unique identifier of a pipeline
          format: uuid
          title: Evaluation set id
          type: string
        matched_labels:
          description: Number of not matched labels
          title: Matched labels
          type: integer
        name:
          description: Name of the evaluation set. By default name of the csv or Squat2
            file.
          title: Name
          type: string
        total_labels:
          description: Number of total uploaded labels
          title: Total number of labels
          type: integer
      required:
      - evaluation_set_id
      - name
      - created_at
      - matched_labels
      - total_labels
      title: Pipeline object
      type: object
    FetchDocumentsParams:
      properties:
        filters:
          additionalProperties:
            items:
              type: string
            type: array
          title: Filters
          type: object
        return_embedding:
          title: Return Embedding
          type: boolean
      title: FetchDocumentsParams
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Label:
      properties:
        answer:
          title: Answer
          type: string
        answer_end:
          title: Answer End
          type: integer
        answer_start:
          title: Answer Start
          type: integer
        candidates:
          additionalProperties:
            additionalProperties:
              type: number
            type: object
          default: Candidates that were found in the label <-> file matching
          description: A dictionary that holds the UUID as key and score as value
            for each candidate in the label to file matching.
          title: Candidates
          type: object
        context:
          title: Context
          type: string
        external_file_name:
          title: External File Name
          type: string
        file_id:
          format: uuid
          title: File Id
          type: string
        label_id:
          description: unique identifier of a label
          format: uuid
          title: Label id
          type: string
        meta:
          title: Meta
          type: object
        query:
          title: Query
          type: string
        state:
          default: Label matching status
          description: 'Represents the current state for matching a file. Possible
            states are: MATCHING_NOT_STARTED, MATCHED, NO_MATCH_FOUND, CANDIDATES_FOUND'
          title: State
          type: string
      required:
      - label_id
      - query
      - meta
      title: Label object
      type: object
    LabelList:
      items:
        $ref: '#/components/schemas/Label'
      title: Evaluation Set List
      type: array
    Languages:
      properties:
        languages:
          items:
            type: string
          title: Languages
          type: array
      required:
      - languages
      title: Languages
      type: object
    MetaValuesResponse:
      properties:
        values:
          items:
            type: string
          title: Values
          type: array
      required:
      - values
      title: MetaValuesResponse
      type: object
    MetadataFieldsSchema:
      properties:
        mapping:
          items:
            $ref: '#/components/schemas/_MetadataField'
          title: Mapping
          type: array
      required:
      - mapping
      title: MetadataFieldsSchema
      type: object
    ModelRegistryToken:
      properties:
        model_registry_token_id:
          description: Unique identifyer of the search
          format: uuid
          title: Search history id
          type: string
        provider_domain:
          description: Model provider domain e.g. huggingface.com
          title: Provider domain
          type: string
      required:
      - model_registry_token_id
      - provider_domain
      title: Model registry token
      type: object
    Notebook:
      properties:
        link:
          title: Link
          type: string
      required:
      - link
      title: Notebook
      type: object
    OrganizationFormatted:
      properties:
        name:
          description: Unique name of an organization
          title: Organization name
          type: string
        organization_id:
          description: Unique identifier of an organization
          format: uuid
          title: Organization id
          type: string
        pricing_plan:
          description: Pricing plan of an organization between 0 and 3
          title: Pricing plan
          type: integer
        role:
          title: Role
          type: string
        workspaces:
          items:
            $ref: '#/components/schemas/EntityRole'
          title: Workspaces
          type: array
      required:
      - name
      - organization_id
      - role
      - workspaces
      title: OrganizationFormatted
      type: object
    OrganizationName:
      properties:
        name:
          description: Unique name of an organization
          title: Organization name
          type: string
      required:
      - name
      title: OrganizationName
      type: object
    Pipeline:
      properties:
        created_at:
          description: Datetime object, when the pipeline was created
          format: date-time
          title: Pipeline creation
          type: string
        deleted:
          description: Soft deletion of pipelines
          title: Pipeline delted
          type: boolean
        indexing:
          $ref: '#/components/schemas/PipelineIndexingStatus'
        is_default:
          description: Pipeline is set to default
          title: Pipeline is default
          type: boolean
        name:
          description: Name of te pipeline
          title: Pipeline name
          type: string
        pipeline_id:
          description: unique identifier of a pipeline
          format: uuid
          title: Pipeline id
          type: string
        status:
          default: Pipeline status
          description: ' Status of a pipeline. This string is e.g.  ''deployed'',
            ''undeployed'', ''deployment_in_progress'', etc.'
          title: Status
          type: string
      required:
      - name
      - pipeline_id
      - created_at
      - is_default
      - indexing
      title: Pipeline object
      type: object
    PipelineFeedback:
      properties:
        is_correct_answer:
          description: Feedback if the answer was correct
          title: Correct answer
          type: boolean
        is_correct_document:
          description: Feedback if the document was matched correctly
          title: Correct document
          type: boolean
        result_id:
          title: Result Id
          type: string
      required:
      - result_id
      - is_correct_document
      - is_correct_answer
      title: PipelineFeedback
      type: object
    PipelineIndexingStatus:
      properties:
        pending_file_count:
          description: Number of pending files to be indexed
          title: Pending files
          type: integer
        status:
          description: Returns one of `NOT_INDEXED`, `INDEXED`,...
          title: Indexing status
          type: string
        total_file_count:
          description: Total number of files that are assigned to a pipeline
          title: Total files
          type: integer
      required:
      - status
      - pending_file_count
      - total_file_count
      title: PipelineIndexingStatus
      type: object
    PipelineList:
      items:
        $ref: '#/components/schemas/Pipeline'
      title: Pipeline List
      type: array
    PipelineName:
      properties:
        name:
          description: Name of te pipeline
          title: Pipeline name
          type: string
      required:
      - name
      title: PipelineName
      type: object
    PipelinePagination:
      properties:
        data:
          $ref: '#/components/schemas/PipelineList'
        has_more:
          title: Has More
          type: boolean
        total:
          title: Total
          type: integer
      required:
      - data
      - has_more
      - total
      title: PipelinePagination
      type: object
    PipelineQuery:
      properties:
        filters:
          additionalProperties:
            items:
              type: string
            type: array
          title: Filters
          type: object
        queries:
          items:
            type: string
          title: Queries
          type: array
      required:
      - queries
      title: PipelineQuery
      type: object
    PipelineYaml:
      properties:
        yaml:
          description: Yaml string of a pipeline
          title: Pipeline yaml
          type: string
      required:
      - yaml
      title: PipelineYaml
      type: object
    QueryDocumentsParams:
      properties:
        custom_query:
          title: Custom Query
          type: string
        filters:
          additionalProperties:
            items:
              type: string
            type: array
          title: Filters
          type: object
        query:
          title: Query
          type: string
        query_emb:
          items:
            type: number
          title: Query Emb
          type: array
        return_embedding:
          title: Return Embedding
          type: boolean
        similarity:
          default: dot_product
          title: Similarity
          type: string
        top_k:
          default: 10
          title: Top K
          type: integer
      title: QueryDocumentsParams
      type: object
    RolesToDB:
      description: An enumeration.
      enum:
      - 0
      - 1
      - 2
      - 3
      title: RolesToDB
    SearchHistory:
      properties:
        duration:
          description: Duration in ms.
          title: Query duration
          type: integer
        pipeline:
          $ref: '#/components/schemas/PipelineName'
        request:
          description: Query request
          title: Query request
          type: object
        response:
          description: Response list from haystack open source
          items:
            type: object
          title: Response list
          type: array
        search_history_id:
          description: Unique identifyer of the search
          format: uuid
          title: Search history id
          type: string
        time:
          description: Timestamp when the query was send
          format: date-time
          title: Query time
          type: string
        user:
          $ref: '#/components/schemas/UserIdName'
      required:
      - search_history_id
      - request
      - response
      - user
      - pipeline
      - time
      - duration
      title: Search History List
      type: object
    SearchHistoryList:
      items:
        $ref: '#/components/schemas/SearchHistory'
      title: Token List
      type: array
    SearchHistoryPagination:
      properties:
        data:
          $ref: '#/components/schemas/SearchHistoryList'
        has_more:
          title: Has More
          type: boolean
        total:
          title: Total
          type: integer
      required:
      - data
      - has_more
      title: SearchHistoryPagination
      type: object
    Server:
      properties:
        state:
          $ref: '#/components/schemas/ServerState'
      required:
      - state
      title: Server
      type: object
    ServerState:
      description: An enumeration.
      enum:
      - STARTING
      - UP
      - DOWN
      title: ServerState
      type: string
    Subscription:
      properties:
        pricing_plan:
          title: Pricing Plan
          type: string
      required:
      - pricing_plan
      title: Subscription
      type: object
    Token:
      properties:
        api_token_id:
          description: Unique identifier of the api token
          format: uuid
          title: API Token id
          type: string
        expires_at:
          description: Timestamp when the token should expire e.g. today in seconds
            + 1 year in seconds
          format: date-time
          title: API token expiry
          type: string
        user:
          $ref: '#/components/schemas/UserName'
      required:
      - api_token_id
      - user
      title: Token Meta
      type: object
    TokenList:
      items:
        $ref: '#/components/schemas/Token'
      title: Token List
      type: array
    TokenPagination:
      properties:
        data:
          $ref: '#/components/schemas/TokenList'
        has_more:
          title: Has More
          type: boolean
        total:
          title: Total
          type: integer
      required:
      - data
      - has_more
      - total
      title: TokenPagination
      type: object
    UpdateModelRegistryToken:
      properties:
        token:
          description: Token of the providing host
          title: Token
          type: string
      required:
      - token
      title: 'Update Registry token '
      type: object
    User:
      properties:
        email:
          description: Email of a user
          title: Email
          type: string
        family_name:
          description: Given name of a user
          title: Given name
          type: string
        given_name:
          description: Given name of a user
          title: Given name
          type: string
        oauth_id:
          description: Oauth id from auth0
          title: Oauth id
          type: string
        oauth_provider:
          description: 'Oauth provider from auth0. This can be for example: ''auth0'',
            ''google-auth'', ''github'', etc.'
          title: Oauth provider
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationFormatted'
        user_id:
          format: uuid
          title: User Id
          type: string
      required:
      - given_name
      - family_name
      - user_id
      - email
      - oauth_id
      - oauth_provider
      - organization
      title: User
      type: object
    UserIdName:
      properties:
        family_name:
          description: Given name of a user
          title: Given name
          type: string
        given_name:
          description: Given name of a user
          title: Given name
          type: string
        user_id:
          format: uuid
          title: User Id
          type: string
      required:
      - given_name
      - family_name
      - user_id
      title: Oauth user
      type: object
    UserInvitation:
      properties:
        email:
          description: Email of a user
          title: Email
          type: string
        family_name:
          description: Given name of a user
          title: Given name
          type: string
        given_name:
          description: Given name of a user
          title: Given name
          type: string
        role:
          $ref: '#/components/schemas/RolesToDB'
      required:
      - given_name
      - family_name
      - email
      - role
      title: User Invitation
      type: object
    UserList:
      items:
        $ref: '#/components/schemas/User'
      title: User List
      type: array
    UserName:
      properties:
        family_name:
          description: Given name of a user
          title: Given name
          type: string
        given_name:
          description: Given name of a user
          title: Given name
          type: string
      required:
      - given_name
      - family_name
      title: User Name
      type: object
    UserPagination:
      properties:
        data:
          $ref: '#/components/schemas/UserList'
        has_more:
          title: Has More
          type: boolean
        total:
          title: Total
          type: integer
      required:
      - data
      - has_more
      - total
      title: UserPagination
      type: object
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    Workspace:
      properties:
        languages:
          description: supported languages within a workspace
          title: Workspace languages
          type: object
        metadata_fields:
          description: Metadata for workspaces
          title: Workspace Meta
          type: object
        name:
          description: Unique name of a workspace
          title: Workspace name
          type: string
        workspace_id:
          description: Unique identifier of a workspace
          format: uuid
          title: Workspace id
          type: string
      required:
      - workspace_id
      - name
      title: Workspace
      type: object
    WorkspaceList:
      items:
        $ref: '#/components/schemas/Workspace'
      title: User List
      type: array
    WorkspaceStats:
      properties:
        average_response_time:
          title: Average Response Time
          type: number
        document_count:
          title: Document Count
          type: integer
        file_count:
          title: File Count
          type: integer
        search_request_count:
          title: Search Request Count
          type: integer
      required:
      - file_count
      - document_count
      - search_request_count
      - average_response_time
      title: WorkspaceStats
      type: object
    _MetadataField:
      properties:
        name:
          title: Name
          type: string
        type:
          title: Type
          type: string
      required:
      - name
      - type
      title: _MetadataField
      type: object
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http
info:
  description: Deepset Cloud API description
  title: Deepset Cloud
  version: 1.0.0
openapi: 3.0.2
paths:
  /:
    get:
      operationId: redirect__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Redirect
      tags:
      - health
  /api/v1/me:
    get:
      operationId: read_users_me_api_v1_me_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Read Users Me
      tags:
      - user
  /api/v1/model_registry_token:
    delete:
      operationId: remove_token_api_v1_model_registry_token_delete
      responses:
        '202':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Remove Token
      tags:
      - model_registry_token
    get:
      operationId: get_token_api_v1_model_registry_token_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRegistryToken'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Token
      tags:
      - model_registry_token
    post:
      operationId: create_token_api_v1_model_registry_token_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModelRegistryToken'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Token
      tags:
      - model_registry_token
    put:
      operationId: update_token_api_v1_model_registry_token_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateModelRegistryToken'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Token
      tags:
      - model_registry_token
  /api/v1/notebook:
    post:
      operationId: post_notebook_api_v1_notebook_post
      parameters:
      - in: query
        name: pipeline_id
        required: false
        schema:
          format: uuid
          title: Pipeline Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notebook'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Post Notebook
      tags:
      - notebook
  /api/v1/notebook-server:
    get:
      operationId: get_jupyter_lab_api_v1_notebook_server_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Jupyter Lab
      tags:
      - notebook
    post:
      operationId: start_jupyter_lab_api_v1_notebook_server_post
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Start Jupyter Lab
      tags:
      - notebook
  /api/v1/organization:
    get:
      operationId: get_organization_api_v1_organization_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationName'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Organization
      tags:
      - organization
  /api/v1/organization/{organization_id}/invitation:
    post:
      operationId: invite_user_to_organization_api_v1_organization__organization_id__invitation_post
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          title: Organization Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInvitation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Invite User To Organization
      tags:
      - organization
  /api/v1/request_subscription:
    post:
      operationId: request_subscription_api_v1_request_subscription_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Request Subscription
      tags:
      - organization
  /api/v1/token:
    get:
      operationId: get_tokens_api_v1_token_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          title: Limit
          type: integer
      - in: query
        name: before
        required: false
        schema:
          title: Before
          type: string
      - in: query
        name: after
        required: false
        schema:
          title: After
          type: string
      - in: query
        name: page_number
        required: false
        schema:
          title: Page Number
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPagination'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Tokens
      tags:
      - api_token
    post:
      operationId: create_token_api_v1_token_post
      parameters:
      - in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITokenResult'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Token
      tags:
      - api_token
  /api/v1/token/{api_token_id}:
    delete:
      operationId: remove_token_api_v1_token__api_token_id__delete
      parameters:
      - in: path
        name: api_token_id
        required: true
        schema:
          title: Api Token Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Remove Token
      tags:
      - api_token
  /api/v1/users:
    get:
      operationId: get_users_api_v1_users_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          title: Limit
          type: integer
      - in: query
        name: before
        required: false
        schema:
          title: Before
          type: string
      - in: query
        name: after
        required: false
        schema:
          title: After
          type: string
      - in: query
        name: page_number
        required: false
        schema:
          title: Page Number
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPagination'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Users
      tags:
      - user
  /api/v1/users/{user_id}:
    get:
      operationId: get_user_api_v1_users__user_id__get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get User
      tags:
      - user
  /api/v1/workspaces:
    get:
      operationId: list_workspaces_api_v1_workspaces_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceList'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: List Workspaces
      tags:
      - workspace
  /api/v1/workspaces/{workspace_name}:
    get:
      operationId: get_workspace_api_v1_workspaces__workspace_name__get
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Workspace
      tags:
      - workspace
  /api/v1/workspaces/{workspace_name}/evaluation_sets:
    get:
      operationId: get_evaluation_sets_api_v1_workspaces__workspace_name__evaluation_sets_get
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      - in: query
        name: name
        required: false
        schema:
          title: Name
          type: string
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          title: Limit
          type: integer
      - in: query
        name: before
        required: false
        schema:
          title: Before
          type: string
      - in: query
        name: after
        required: false
        schema:
          title: After
          type: string
      - in: query
        name: page_number
        required: false
        schema:
          title: Page Number
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationSetPagination'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Evaluation Sets
      tags:
      - evaluation_set
  /api/v1/workspaces/{workspace_name}/evaluation_sets/import:
    post:
      operationId: import_evaluation_set_api_v1_workspaces__workspace_name__evaluation_sets_import_post
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_evaluation_set_api_v1_workspaces__workspace_name__evaluation_sets_import_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationSetImport'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Import Evaluation Set
      tags:
      - evaluation_set
  /api/v1/workspaces/{workspace_name}/evaluation_sets/{evaluation_set_id}:
    delete:
      operationId: delete_evaluation_set_api_v1_workspaces__workspace_name__evaluation_sets__evaluation_set_id__delete
      parameters:
      - in: path
        name: evaluation_set_id
        required: true
        schema:
          title: Evaluation Set Id
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Evaluation Set
      tags:
      - evaluation_set
    get:
      operationId: get_evaluation_set_api_v1_workspaces__workspace_name__evaluation_sets__evaluation_set_id__get
      parameters:
      - in: path
        name: evaluation_set_id
        required: true
        schema:
          title: Evaluation Set Id
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelList'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Evaluation Set
      tags:
      - evaluation_set
  /api/v1/workspaces/{workspace_name}/files:
    get:
      operationId: list_files_api_v1_workspaces__workspace_name__files_get
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      - in: query
        name: name
        required: false
        schema:
          title: Name
          type: string
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          title: Limit
          type: integer
      - in: query
        name: before
        required: false
        schema:
          title: Before
          type: string
      - in: query
        name: after
        required: false
        schema:
          title: After
          type: string
      - in: query
        name: page_number
        required: false
        schema:
          title: Page Number
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Files
      tags:
      - file
    post:
      operationId: upload_file_api_v1_workspaces__workspace_name__files_post
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      - in: query
        name: file_name
        required: false
        schema:
          title: File Name
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_file_api_v1_workspaces__workspace_name__files_post'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Upload File
      tags:
      - file
  /api/v1/workspaces/{workspace_name}/files/{file_id}:
    delete:
      operationId: delete_file_api_v1_workspaces__workspace_name__files__file_id__delete
      parameters:
      - in: path
        name: file_id
        required: true
        schema:
          format: uuid
          title: File Id
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete File
      tags:
      - file
    get:
      operationId: get_file_api_v1_workspaces__workspace_name__files__file_id__get
      parameters:
      - in: path
        name: file_id
        required: true
        schema:
          format: uuid
          title: File Id
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get File
      tags:
      - file
  /api/v1/workspaces/{workspace_name}/files/{file_id}/documents:
    get:
      operationId: get_document_api_v1_workspaces__workspace_name__files__file_id__documents_get
      parameters:
      - in: path
        name: file_id
        required: true
        schema:
          format: uuid
          title: File Id
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Document
      tags:
      - file
  /api/v1/workspaces/{workspace_name}/files/{file_id}/meta:
    get:
      operationId: get_file_meta_api_v1_workspaces__workspace_name__files__file_id__meta_get
      parameters:
      - in: path
        name: file_id
        required: true
        schema:
          title: File Id
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get File Meta
      tags:
      - file
    put:
      operationId: update_file_meta_api_v1_workspaces__workspace_name__files__file_id__meta_put
      parameters:
      - in: path
        name: file_id
        required: true
        schema:
          title: File Id
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Meta
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update File Meta
      tags:
      - file
  /api/v1/workspaces/{workspace_name}/indexes/{index_name}:
    get:
      description: Checks connection to Opensearch documentstore and checks if pipeline_name
        (aka. index exists).
      operationId: connect_api_v1_workspaces__workspace_name__indexes__index_name__get
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      - in: path
        name: index_name
        required: true
        schema:
          title: Index Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStore'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Connect
      tags:
      - document_store
  /api/v1/workspaces/{workspace_name}/indexes/{index_name}/documents:
    get:
      operationId: get_all_documents_api_v1_workspaces__workspace_name__indexes__index_name__documents_get
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      - in: path
        name: index_name
        required: true
        schema:
          title: Index Name
          type: string
      - in: query
        name: return_embedding
        required: false
        schema:
          default: false
          title: Return Embedding
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DCDocumment'
                title: Response Get All Documents Api V1 Workspaces  Workspace Name  Indexes  Index
                  Name  Documents Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get All Documents
      tags:
      - document_store
  /api/v1/workspaces/{workspace_name}/indexes/{index_name}/documents-count:
    post:
      operationId: count_documents_stream_api_v1_workspaces__workspace_name__indexes__index_name__documents_count_post
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      - in: path
        name: index_name
        required: true
        schema:
          title: Index Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountDocumentsParams'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DCDocumentCount'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Count Documents Stream
      tags:
      - document_store
  /api/v1/workspaces/{workspace_name}/indexes/{index_name}/documents-query:
    post:
      operationId: query_documents_stream_api_v1_workspaces__workspace_name__indexes__index_name__documents_query_post
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      - in: path
        name: index_name
        required: true
        schema:
          title: Index Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryDocumentsParams'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DCDocumment'
                title: Response Query Documents Stream Api V1 Workspaces  Workspace
                  Name  Indexes  Index Name  Documents Query Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Query Documents Stream
      tags:
      - document_store
  /api/v1/workspaces/{workspace_name}/indexes/{index_name}/documents-stream:
    post:
      operationId: get_all_documents_stream_api_v1_workspaces__workspace_name__indexes__index_name__documents_stream_post
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      - in: path
        name: index_name
        required: true
        schema:
          title: Index Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchDocumentsParams'
        required: true
      responses:
        '200':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get All Documents Stream
      tags:
      - document_store
  /api/v1/workspaces/{workspace_name}/indexes/{index_name}/documents/{document_id}:
    get:
      operationId: get_document_api_v1_workspaces__workspace_name__indexes__index_name__documents__document_id__get
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      - in: path
        name: index_name
        required: true
        schema:
          title: Index Name
          type: string
      - in: path
        name: document_id
        required: true
        schema:
          title: Document Id
          type: string
      - in: query
        name: return_embedding
        required: false
        schema:
          default: false
          title: Return Embedding
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DCDocumment'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Document
      tags:
      - document_store
  /api/v1/workspaces/{workspace_name}/languages:
    get:
      operationId: workspace_languages_api_v1_workspaces__workspace_name__languages_get
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Languages'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Workspace Languages
      tags:
      - workspace
  /api/v1/workspaces/{workspace_name}/metadata_fields:
    get:
      operationId: get_meta_fields_api_v1_workspaces__workspace_name__metadata_fields_get
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Meta Fields
      tags:
      - metadata
    put:
      operationId: update_meta_fields_api_v1_workspaces__workspace_name__metadata_fields_put
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataFieldsSchema'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Meta Fields
      tags:
      - metadata
  /api/v1/workspaces/{workspace_name}/metadata_fields/{meta_key}:
    get:
      operationId: search_api_v1_workspaces__workspace_name__metadata_fields__meta_key__get
      parameters:
      - in: path
        name: meta_key
        required: true
        schema:
          title: Meta Key
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaValuesResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search
      tags:
      - metadata
  /api/v1/workspaces/{workspace_name}/pipelines:
    get:
      operationId: list_pipelines_api_v1_workspaces__workspace_name__pipelines_get
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      - in: query
        name: pipeline_name
        required: false
        schema:
          title: Pipeline Name
          type: string
      - in: query
        name: deleted
        required: false
        schema:
          default: false
          title: Deleted
          type: boolean
      - in: query
        name: status
        required: false
        schema:
          title: Status
          type: string
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          title: Limit
          type: integer
      - in: query
        name: before
        required: false
        schema:
          title: Before
          type: string
      - in: query
        name: after
        required: false
        schema:
          title: After
          type: string
      - in: query
        name: page_number
        required: false
        schema:
          title: Page Number
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelinePagination'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Pipelines
      tags:
      - pipeline
    post:
      operationId: create_pipeline_api_v1_workspaces__workspace_name__pipelines_post
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineName'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Pipeline
      tags:
      - pipeline
  /api/v1/workspaces/{workspace_name}/pipelines/{pipeline_name}:
    delete:
      operationId: delete_pipeline_api_v1_workspaces__workspace_name__pipelines__pipeline_name__delete
      parameters:
      - in: path
        name: pipeline_name
        required: true
        schema:
          title: Pipeline Name
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Pipeline
      tags:
      - pipeline
    get:
      operationId: get_pipeline_api_v1_workspaces__workspace_name__pipelines__pipeline_name__get
      parameters:
      - in: path
        name: pipeline_name
        required: true
        schema:
          title: Pipeline Name
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Pipeline
      tags:
      - pipeline
  /api/v1/workspaces/{workspace_name}/pipelines/{pipeline_name}/default:
    post:
      operationId: set_default_pipeline_api_v1_workspaces__workspace_name__pipelines__pipeline_name__default_post
      parameters:
      - in: path
        name: pipeline_name
        required: true
        schema:
          title: Pipeline Name
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Set Default Pipeline
      tags:
      - pipeline
  /api/v1/workspaces/{workspace_name}/pipelines/{pipeline_name}/deploy:
    post:
      operationId: deploy_pipeline_api_v1_workspaces__workspace_name__pipelines__pipeline_name__deploy_post
      parameters:
      - in: path
        name: pipeline_name
        required: true
        schema:
          title: Pipeline Name
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Deploy Pipeline
      tags:
      - pipeline
  /api/v1/workspaces/{workspace_name}/pipelines/{pipeline_name}/feedback:
    post:
      operationId: add_feedback_api_v1_workspaces__workspace_name__pipelines__pipeline_name__feedback_post
      parameters:
      - in: path
        name: pipeline_name
        required: true
        schema:
          title: Pipeline Name
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineFeedback'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add Feedback
      tags:
      - pipeline
  /api/v1/workspaces/{workspace_name}/pipelines/{pipeline_name}/file-preview:
    post:
      operationId: upload_file_preview_api_v1_workspaces__workspace_name__pipelines__pipeline_name__file_preview_post
      parameters:
      - in: path
        name: pipeline_name
        required: true
        schema:
          title: Pipeline Name
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_file_preview_api_v1_workspaces__workspace_name__pipelines__pipeline_name__file_preview_post'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Upload File Preview
      tags:
      - pipeline
  /api/v1/workspaces/{workspace_name}/pipelines/{pipeline_name}/json:
    get:
      operationId: get_pipeline_yaml_as_json_api_v1_workspaces__workspace_name__pipelines__pipeline_name__json_get
      parameters:
      - in: path
        name: pipeline_name
        required: true
        schema:
          title: Pipeline Name
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Pipeline Yaml As Json
      tags:
      - pipeline
  /api/v1/workspaces/{workspace_name}/pipelines/{pipeline_name}/search:
    post:
      operationId: search_api_v1_workspaces__workspace_name__pipelines__pipeline_name__search_post
      parameters:
      - in: path
        name: pipeline_name
        required: true
        schema:
          title: Pipeline Name
          type: string
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineQuery'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search
      tags:
      - pipeline
  /api/v1/workspaces/{workspace_name}/pipelines/{pipeline_name}/undeploy:
    post:
      operationId: undeploy_pipeline_api_v1_workspaces__workspace_name__pipelines__pipeline_name__undeploy_post
      parameters:
      - in: path
        name: pipeline_name
        required: true
        schema:
          title: Pipeline Name
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Undeploy Pipeline
      tags:
      - pipeline
  /api/v1/workspaces/{workspace_name}/pipelines/{pipeline_name}/yaml:
    get:
      operationId: get_pipeline_yaml_api_v1_workspaces__workspace_name__pipelines__pipeline_name__yaml_get
      parameters:
      - in: path
        name: pipeline_name
        required: true
        schema:
          title: Pipeline Name
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineYaml'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Pipeline Yaml
      tags:
      - pipeline
    put:
      operationId: update_pipeline_yaml_api_v1_workspaces__workspace_name__pipelines__pipeline_name__yaml_put
      parameters:
      - in: path
        name: pipeline_name
        required: true
        schema:
          title: Pipeline Name
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineName'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Pipeline Yaml
      tags:
      - pipeline
  /api/v1/workspaces/{workspace_name}/search_count:
    get:
      operationId: search_count_api_v1_workspaces__workspace_name__search_count_get
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          title: Limit
          type: integer
      - in: query
        name: before
        required: false
        schema:
          title: Before
          type: string
      - in: query
        name: after
        required: false
        schema:
          title: After
          type: string
      - in: query
        name: page_number
        required: false
        schema:
          title: Page Number
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search Count
      tags:
      - workspace
  /api/v1/workspaces/{workspace_name}/search_history:
    get:
      operationId: search_history_api_v1_workspaces__workspace_name__search_history_get
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          title: Limit
          type: integer
      - in: query
        name: before
        required: false
        schema:
          title: Before
          type: string
      - in: query
        name: after
        required: false
        schema:
          title: After
          type: string
      - in: query
        name: page_number
        required: false
        schema:
          title: Page Number
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchHistoryPagination'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search History
      tags:
      - workspace
  /api/v1/workspaces/{workspace_name}/stats:
    get:
      operationId: get_workspace_stats_api_v1_workspaces__workspace_name__stats_get
      parameters:
      - in: path
        name: workspace_name
        required: true
        schema:
          title: Workspace Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceStats'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Workspace Stats
      tags:
      - workspace
  /health:
    get:
      operationId: health_health_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Health
      tags:
      - health
